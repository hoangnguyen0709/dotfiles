" Creating a mapping key for comment block based on filename
" This file is source by .exrc
" Usage:
"+ Mark beginning point and ending point by mq and mw
"+ Type these control keys in command mode:
"  - CRTL_W D    : comment lines from `q to `w
"  - CRTL_W F    : uncomment lines from `q to `w


" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function! Make_Comments()
   if(&ft == "asm")                                "asm
     :s/^/; /
   elseif ((&ft == "verilog") || (&ft == "sc"))    "verilog
     :s/^/\/\/ /
   elseif ((&ft == "c") || (&ft == "cpp"))         "C
     :s/^/\/\/ /
   elseif (&ft == "vim")                           "vim
     :s/^/" /
   elseif (&ft == "matlab")                        "Matlab
     :s/^/% /
   elseif (&ft == "psl")                           "PSL
     :s/^/\/\/ /
   elseif (&ft == "sbt") || (&ft == "scala")       "scala
     :s/^/\/\/ /
   else                                            "csh, perl, tcl
     :s/^/# /
   endif
":%s/a/b/g
":%s/b/2/g
":%s/c/3
endfunction
":com Make_Comments call Make_Comments()
:map <C-W><C-D> :call Make_Comments()<CR>
" ---------------------------------------------------------
:map <C-C> "+y<ESC>
:map <C-W><C-V> "+gp<ESC><LEFT><LEFT><LEFT>
:map <C-W><C-X> "+x<ESC>
:map <C-W><C-A> <ESC>ggVG$
:map <C-Y> <Esc><C-R>
:map <F5> :e!<CR>
:map <F2> :mksession ~/.vim/session/
:map <F3> :source ~/.vim/session/

":map <C-S> :`w<CR>
" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function! Make_Uncomments()
  if(&ft == "asm")                               " asm
    if( getline('.') =~ '^ *;')                " if line start with zero or more spaces followed by ;
      :s/^\( *\); \=/\1/
    endif
  elseif ((&ft == "verilog") || (&ft == "sc"))    "verilog
    if( getline('.') =~ '^ *\/\/')             " if line start with zero or more spaces followed by //
      :s/^\( *\)\/\/ \=/\1/
    endif
  elseif ((&ft == "c") || (&ft == "cpp"))         "C
    if( getline('.') =~ '^ *\/\/')             " if line start with zero or more spaces followed by //
      :s/^\( *\)\/\/ \=/\1/
    endif
  elseif (&ft == "vim")                           " vim
    if( getline('.') =~ '^ *"')
      :s/^\( *\)" \=/\1/
    endif
  elseif (&ft == "matlab")                        " Matlab
    if( getline('.') =~ '^ *%')
      :s/^\( *\)% \=/\1/
    endif
  elseif (&ft == "psl")                           " PSL
    if( getline('.') =~ '^ *\/\/')
      :s/^\( *\)\/\/ \=/\1/
    endif
  else                                            " csh, perl, tcl
    if( getline('.') =~ '^ *#')                " if line start with zero or more spaces followed by #
      :s/^\( *\)# \=/\1/
    endif
  endif
endfunction
:map <C-W><C-F> :call Make_Uncomments()<CR>
" ---------------------------------------------------------

"Map for increment
"
" vnoremap <C-A> :Inc<CR>
" vnoremap <C-X> :Inc -1<CR>

" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"select all, same with Ctrl-A
:map <C-W><C-A> gg <S-V> G
" ---------------------------------------------------------
"Disable below funtionc June 03,2009 Remove
"

":com Add_comments call Add_comments()
:com -range=% -nargs=* Comments call Add_comments(<f-args>)
" ---------------------------------------------------------


" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"Use Tab and BackTab in completion
function! CleverTab()
  if(strpart( getline('.'), col('.')-2, 1 ) =~ '[a-zA-Z0-9_]')
    return "\<C-N>"
  elseif (strpart( getline('.'), col('.')-2, 1 ) =~ '/')
    return "\<C-X>\<C-F>\<C-P>"
  else
    return "\<Tab>"
  endif
endfunction
inoremap <Tab> <C-R>=CleverTab()<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
